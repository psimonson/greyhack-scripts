// wifihack - Almost fully automate wifi hacking.
import_code("/home/5n4k3/src/helper.src")
usage = "<b>Usage: " + program_path.split("/")[-1] + "</b>"
if params.len != 0 then exit(usage)

crypto = get_library("crypto.so", true)
if not crypto then exit

// Get computer and delete file.cap if exists
computer = get_shell.host_computer
file = computer.File(current_path + "/file.cap")
if file then
	file.delete
end if

// Get interfaces
network_info = computer.network_devices.split(" ")
interfaces = []
interfaces_num = 0
for info in network_info
	if info == "wlan" + str(interfaces_num) then
		interfaces.push(info)
		interfaces_num = interfaces_num + 1
	end if
end for

// Selection menu for wifi interfaces
interface = 0
while interface <= 0 or interface > interfaces.len
	num = 1
	print("Interfaces:")
	for net in interfaces
		print(str(num) + ". " + net)
		num = num + 1
	end for
	print("0. Exit")
	interface = user_input("Selection: ")
	interface = interface.val
	if interface == 0 then exit("Program ended")
end while
interface = interface - 1
if interface < 0 or interface > interfaces.len-1 then exit("Error: Can't find interface, got " + str(interface.val))

// Found interface
print("Interface: " + interfaces[interface])

result = crypto.airmon("start", interfaces[interface])
if result == 0 then exit("Failed to start monitoring...")

// Get network list
get_netlist = function()
	print("Getting wifi network list...")
	info = "BSSID POWER ESSID"
	networks = computer.wifi_networks(interfaces[interface])
	for net in networks
		info = info + "\n" + net
	end for
	print(format_columns(info))
	return networks
end function

// Get user selection
essid = null
bssid = null
networks = []
selection = 0
while selection <= 0 or selection > networks.len
	num = 1
	networks = get_netlist()
	print("Please select a network:")
	for net in networks
		print(str(num) + ". " + net.split(" ")[-1])
		num = num + 1
	end for
	print("0. Exit")
	selection = user_input("Selection: ")
	selection = selection.val
	if selection == 0 then
		print("You decided to exit...")
		crypto.airmon("stop", interfaces[interface])
		if result == 1 then
			print("Monitoring, stopped running...")
		end if
		exit("Program ended")
	end if
end while
selection = selection - 1
if selection < 0 or selection > networks.len-1 then exit("Error: Selection out of range.")

// Now run aireplay to get capture data
packet_count = null
while not packet_count or packet_count <= 0 and packet_count >= 300000
	packet_count = user_input("How many ACKs do you need? ")
	packet_count = packet_count.val
end while
bssid = networks[selection].split(" ")[-3]
essid = networks[selection].split(" ")[-1]
result = crypto.aireplay(bssid, essid, packet_count)
if result == 0 then
	print("Failed to get capture data from wifi network.")
	result = crypto.airmon("stop", interfaces[interface])
	if result == 0 then
		print("Failed to stop monitoring...")
	end if
	exit("Program ended")
end if

// Launch the WEP cracker program called "aircrack"
result = crypto.aircrack(home_dir + "/file.cap")
if not result then
	print("Failed to crack password.")
	result = crypto.airmon("stop", interfaces[interface])
	if result == 0 then
		print("Failed to stop monitoring...")
	end if
	exit("Program ended")
end if
password = result

// Stop monitoring interface
result = crypto.airmon("stop", interfaces[interface])
if result == 0 then
	print("Monitoring failed to stop, already stopped.")
end if

// Save password to file and connect.
print("Wifi network cracked saving password...")
filename = essid + ".txt"
result = computer.touch(home_dir, filename)
if not result then
	print("Cannot create file: " + filename)
	exit("Program ended")
end if
result = computer.File(filename)
if result != null then
	result.set_content("")
	result.set_content("Network" + char(10) + "============" + char(10) + "ESSID: " + essid + char(10) + "BSSID: " + bssid + char(10) + "Password: " + password + char(10))
end if
print("Network: " + essid + "\nPassword: " + password)

