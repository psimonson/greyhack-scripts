// menu.src - Source for a option menu.

// Function to add color to a string.
make_color = function(color = "white", string = "")
	if not color then exit("No color provided.")
	if not string then exit("No string provided.")
	if typeof(color) != "string" then exit("Color can equal:\n  (red, green, blue, yellow, white, black)")
	if typeof(string) != "string" then exit("String needs to be entered.")
	
	if color == "red" then
		return "<color=#AA0000>" + string + "</color>"
	else if color == "green" then
		return "<color=#00AA00>" + string + "</color>"
	else if color == "blue" then
		return "<color=#0000AA>" + string + "</color>"
	else if color == "yellow" then
		return "<color=#AABB00>" + string + "</color>"
	else if color == "black" then
		return "<color=#000000>" + string + "</color>"
	else if color == "white" then
		return "<color=#FFFFFF>" + string + "</color>"
	else
		return "<color=#FFFFFF>" + string + "</color>"
	end if
end function

// Function to create a menu.
make_menu = function(options = null, color = "yellow", endstr = "Exit")
	if not options then exit("Please pass options list as first argument.")
	if not color then exit("Second argument is color string.")
	if not endstr then exit("Third argument is a menu exit string.")
	if typeof(options) != "list" then exit("First argument is of type 'list'.")
	if typeof(color) != "string" then exit("Second argument is of type 'string'.")
	if typeof(endstr) != "string" then exit("Third argument is of type 'string'.")
	
	option = null
	while not option or option < 0 or option > options.len
		for i in range(1, options.len)
			print(make_color(color, str(i) + ". " + options[i - 1]))
		end for
		print(make_color(color, "0. " + endstr))
		option = user_input(make_color(color, "Option: "))
		option = option.to_int
		if option == 0 then break
	end while
	return option
end function

